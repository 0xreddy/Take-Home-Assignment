name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker web-app
        run: |
                docker build -t web-app ./web-app
        
      
      - name: Test Web App
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://your-web-app-url)
          if [ $response -eq 200 ]; then
            echo "Web app test successful"
          else
            echo "Web app test failed with status code $response"
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: your-aws-region

      - name: Deploy to AWS Fargate
        run: |
          aws ecr get-login-password --region your-aws-region | docker login --username AWS --password-stdin your-aws-account-id.dkr.ecr.your-aws-region.amazonaws.com
          docker tag your-image-name:latest your-aws-account-id.dkr.ecr.your-aws-region.amazonaws.com/your-image-name:latest
          docker push your-aws-account-id.dkr.ecr.your-aws-region.amazonaws.com/your-image-name:latest
          aws ecs update-service --cluster your-ecs-cluster-name --service your-ecs-service-name --force-new-deployment
