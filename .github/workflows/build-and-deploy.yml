name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker web-app
        id: docker_build
        run: |
          docker build -t web-app ./web-app
          echo "::set-output name=build_status::success" # Set build status as 'success' if the build completes without errors
        
      - name: Check Build Status
        run: |
          if [ "${{ steps.docker_build.outputs.build_status }}" == "success" ]; then
            echo "Docker build successful"
          else
            echo "Docker build failed"
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Deploy to AWS Fargate
        if: success() # Only deploy if the Docker build is successful
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ secrets.aws_account_id }}
          docker tag web-app:latest ${{ secrets.aws_account_id }}.dkr.ecr.ap-south-1.amazonaws.com/my-ecr-repo:latest
          docker push ${{ secrets.aws_account_id }}.dkr.ecr.ap-south-1.amazonaws.com/my-ecr-repo:latest
          aws ecs update-service --cluster web-app --service web-app --force-new-deployment
